---
export async function getStaticPaths() {
  return [
    { params: { lang: 'de' } },
    { params: { lang: 'en' } }
  ];
}

import Layout from '../../layouts/Layout.astro';
import ProjectCard from '../../components/ProjectCard.astro';
import MarkdownModal from '../../components/MarkdownModal.astro';

import generalDE from '../../content/general.de.yaml';
import generalEN from '../../content/general.en.yaml';
import timelineDE from '../../content/timeline.de.yaml';
import timelineEN from '../../content/timeline.en.yaml';
import vmDE       from '../../content/versicherungsmathematik.de.yaml';
import vmEN       from '../../content/versicherungsmathematik.en.yaml';
import dsDE       from '../../content/data_science.de.yaml';
import dsEN       from '../../content/data_science.en.yaml';
import skillsDE   from '../../content/skills.de.yaml';
import skillsEN   from '../../content/skills.en.yaml';
import langsDE    from '../../content/sprachen.de.yaml';
import langsEN    from '../../content/sprachen.en.yaml';
import certsDE    from '../../content/zertifikate.de.yaml';
import certsEN    from '../../content/zertifikate.en.yaml';

const lang = Astro.params.lang ?? "de";

const general = lang === 'de' ? generalDE : generalEN;
const timeline = lang === 'de' ? timelineDE : timelineEN;
const vm = lang === 'de' ? vmDE : vmEN;
const ds = lang === 'de' ? dsDE : dsEN;
const skills = lang === 'de' ? skillsDE : skillsEN;
const langs = lang === 'de' ? langsDE : langsEN;
const certs = lang === 'de' ? certsDE : certsEN;

// Existing content imports (remove the old timeline import)
import CheatDoc from '../../content/Versicherungsmathematik mit Kenntnisstand.md';
import { getCollection } from 'astro:content';
const rawProjects = await getCollection('projects');
const projects = rawProjects.map(project => ({ frontmatter: project.data }));

// topics are now covered by ds.topics
---

<Layout lang={lang}>
  <!-- Hero / intro -->
  <section class="relative flex flex-col items-center py-24 md:py-32 bg-gradient-to-b from-indigo-50 via-white to-white overflow-hidden">
    <!-- Decorative background blob -->
    <svg aria-hidden="true"
      class="absolute top-0 left-1/2 -translate-x-1/2 -z-10 blur-2xl w-[60rem] h-[60rem] text-indigo-100 pointer-events-none"
      viewBox="0 0 600 600" fill="currentColor">
      <path d="M300 0c150 0 300 300 300 300s-150 300-300 300S0 450 0 300 150 0 300 0z" />
    </svg>

    <img
      src="/images/me.png"
      alt="Portrait Thomas Fey-Grytnes"
      class="w-40 h-40 md:w-56 md:h-56 rounded-full object-cover shadow-md"
    />

    <h1 class="mt-6 text-3xl font-bold text-gray-800">
      Thomas Fey-Grytnes
    </h1>
    <p class="mt-2 text-lg text-gray-600 max-w-md text-center">
      {general.roles.join(' · ')}<br/>
    </p>

    <section class="mt-2 text-center">
      <div class="inline-flex justify-center gap-4 px-3 py-2 rounded-md">
        <a href="https://www.linkedin.com/in/thomas-fey-grytnes-9b93822" target="_blank" rel="noopener" class="p-2 rounded-full hover:opacity-80 transition">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="#0077B5" viewBox="0 0 24 24"><path d="M20.447 20.452H17.2V14.9c0-1.327-.027-3.036-1.852-3.036-1.854 0-2.137 1.446-2.137 2.939v5.649H9.063V9h3.112v1.561h.045c.433-.82 1.494-1.684 3.075-1.684 3.287 0 3.891 2.164 3.891 4.977v6.598zM5.337 7.433c-1.006 0-1.822-.817-1.822-1.823 0-1.005.816-1.822 1.822-1.822s1.822.817 1.822 1.822c0 1.006-.816 1.823-1.822 1.823zM6.556 20.452H4.118V9h2.438v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.727v20.546C0 23.226.792 24 1.771 24h20.451C23.2 24 24 23.226 24 22.273V1.727C24 .774 23.2 0 22.225 0z"/></svg>
        </a>
        <a href="https://www.freelance.de/Freelancer/183292-IT-manager"
           target="_blank" rel="noopener"
           class="p-2 rounded-full hover:opacity-80 transition">
          <img
            src="/src/images/freelance-de-logo.jpg"
            alt="freelance.de"
            class="h-5 w-auto max-w-[6rem] block"
          />
        </a>
        <a href="https://github.com/tgrytnes" target="_blank" rel="noopener" class="p-2 rounded-full hover:opacity-80 transition">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="#181717" viewBox="0 0 24 24"><path d="M12 .5C5.4.5 0 5.9 0 12.5c0 5.3 3.4 9.8 8.2 11.4.6.1.8-.2.8-.6v-2.1c-3.3.7-4-1.6-4-1.6-.5-1.3-1.2-1.6-1.2-1.6-1-.7.1-.7.1-.7 1.2.1 1.9 1.2 1.9 1.2 1 .1 1.6-.7 1.9-1 .1-.7.4-1.2.7-1.5-2.6-.3-5.4-1.3-5.4-5.7 0-1.3.5-2.3 1.2-3.2-.1-.3-.6-1.5.1-3.1 0 0 1-.3 3.3 1.2.9-.3 1.8-.5 2.7-.5s1.8.2 2.7.5c2.3-1.5 3.3-1.2 3.3-1.2.7 1.6.3 2.8.1 3.1.7.9 1.2 1.9 1.2 3.2 0 4.4-2.8 5.4-5.4 5.7.4.4.7 1 .7 2v3c0 .3.2.6.8.6 4.8-1.6 8.2-6.1 8.2-11.4C24 5.9 18.6.5 12 .5z"/></svg>
        </a>
      </div>
    </section>


  </section>

  <section class="my-16 container mx-auto px-6 max-w-6xl">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-24" style="grid-template-columns: minmax(400px,1.6fr) 1fr;">
      <!-- Left column: Timeline -->
      <div class="card-box">
        <h2 class="text-3xl font-bold mb-8 text-center md:text-left">Timeline</h2>
        <div class="relative">
          <ul class="space-y-8 timeline">
            {timeline.map((item, idx) => (
              <li class="timeline-item flex items-start gap-4 pl-8 relative">
                <div class="absolute left-2 top-2 w-2 h-2 bg-purple-600 rounded-full"></div>
                <div class="text-sm font-medium text-gray-700 pt-[2px] min-w-[120px] whitespace-nowrap">{item.period}</div>
                <div class="leading-tight">
                  <p class="text-base font-semibold text-gray-800">{item.title}</p>
                  <p class="text-sm text-gray-600">{item.org}{item.place && ` · ${item.place}`}</p>
                  {item.details && (
                    <ul class="list-disc list-inside text-gray-700 mt-2">
                      {item.details.map((detail) => (
                        <li key={JSON.stringify(detail)}>
                          {typeof detail === 'string' ? (
                            detail
                          ) : (
                            Object.entries(detail).map(([key, value]) => (
                              <span key={key}><strong>{key}:</strong> {value}</span>
                            ))
                          )}
                        </li>
                      ))}
                    </ul>
                  )}
                </div>
              </li>
            ))}
          </ul>
        </div>
      </div>

      <!-- Right column: Multiple Sections -->
      <div class="space-y-8">
        <!-- Section: Case Study -->
        <div class="card-box">
          <h2 class="text-3xl font-bold mb-4">{vm.title}</h2>
          <p class="mt-4 text-gray-600">{vm.description}</p>
          <div class="mt-4 text-center md:text-left">
            <MarkdownModal
              Content={CheatDoc}
              trigger={vm.buttonLabel}
              download="/content/Versicherungsmathematik mit Kenntnisstand.md"
              triggerClass="btn inline-flex items-center gap-x-2 px-6 py-3 rounded-full bg-gradient-to-r from-indigo-500 to-violet-600 text-white font-medium shadow-lg hover:scale-105 hover:shadow-xl transition-transform duration-200 ease-out cursor-pointer focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-400"
            />
          </div>
        </div>

        <!-- Section: Data Science -->
        <div class="card-box">
          <h2 class="text-3xl font-bold mb-4">{ds.title}</h2>
          <ul class="list-disc pl-5 space-y-2 text-gray-700">
            {ds.topics.map(topic => (
              <li key={topic.name}>
                <strong>{topic.name}</strong> – {topic.tools.join(', ')}
              </li>
            ))}
          </ul>
          <div class="mt-4 text-center md:text-left">
            <a
              href="https://github.com/tgrytnes/kmeans-demo"
              target="_blank"
              class="btn inline-flex items-center gap-x-2 px-6 py-3 rounded-full bg-gradient-to-r from-indigo-500 to-violet-600 text-white font-medium shadow-lg hover:scale-105 hover:shadow-xl transition-transform duration-200 ease-out cursor-pointer focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-400"
            >
              {ds.buttonLabel}
            </a>
          </div>
        </div>

        <!-- Section: Skills -->
        <div class="card-box">
          <h2 class="text-3xl font-bold mb-4">Skills</h2>
          <ul class="list-disc pl-5 space-y-2 text-gray-700">
            {skills.skills.map(skill => (
              <li key={skill}>{skill}</li>
            ))}
          </ul>
        </div>

        <div class="card-box">
          <h2 class="text-3xl font-bold mb-4">{langs.title}</h2>
          <ul class="list-disc pl-5 space-y-2 text-gray-700">
            {langs.languages.map(lang => (
              <li key={lang.name}>
                {lang.name} – {lang.level}
              </li>
            ))}
          </ul>
        </div>

        <!-- Section: Certificates -->
        <div class="card-box">
          <h2 class="text-3xl font-bold mb-4">{certs.title}</h2>
          <ul class="list-disc pl-5 space-y-2 text-gray-700">
            {certs.certificates.map(cert => (
              <li key={cert.name}>
                {cert.name} – {cert.issuer} {cert.year && `(${cert.year})`}
              </li>
            ))}
          </ul>
        </div>
      </div>

    </div>
</section>
<div class="h-16"></div>
</Layout>